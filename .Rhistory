source('~/R/Intr_to_stat_infer/week1.R', echo=TRUE)
table(points)
pointsTable = table(points)
source('//home.org.aalto.fi/savelaj3/data/Documents/R/Intr_to_stat_infer/week2.R', echo=TRUE)
pointsTable
barplot(pointsTable)
help("break")
freq <- table(factor(POINTS, levels = 0:6))
freq
barplot(freq)
p_mean = mean(POINTS)
p_median = median(POINTS)
help(sd)
p_std = sd(POINTS)
p_var = p_std^2
factor(POINTS, levels = 0:6)
p_min = min(POINTS)
p_max = max(POINTS)
p_mode = mode(POINTS)
help("mode")
help(max)
freq
max(freq)
max(freq[2,])
freq[2,1]
freq[2;1]
freq[2]
p_range = range(POINTS)
help.search("argmax")
summary(POINTS)
p_mode = which.max(POINTS)
p_mode = freq[which.max(POINTS)]
p_mode = as.integer(freq[which.max(POINTS)])
which.max(POINTS)
p_mode = names(freq[which.max(POINTS)])
p_mode = as.integer(names(freq[which.max(POINTS)]))
p_mode = as.numeric(names(freq[which.max(POINTS)]))
source('//home.org.aalto.fi/savelaj3/data/Documents/R/Intr_to_stat_infer/week2.R', echo=TRUE)
p_mode = as.numeric(names(freq[which.max(unname(freq))]))
source('//home.org.aalto.fi/savelaj3/data/Documents/R/Intr_to_stat_infer/week2.R', echo=TRUE)
match(POINTS, unique(POINTS))
table(match(POINTS, unique(POINTS)))
suntan <- read.table("E2SUNTAN.txt")
View(suntan)
suntan <- read.table("E2SUNTAN.txt", header = T)
View(suntan)
hist(suntan)
mode(suntan)
range(suntan)
sun.breaks = seq(range(suntan)[1], range(suntan)[2], by=1)
sun.breaks
suntan <- read.csv("E2SUNTAN.txt", header = T)
# View(suntan)
range(suntan)
sun.breaks = seq(range(suntan)[1], range(suntan)[2], by=1)
hist(suntan)
View(suntan)
suntan.cut = cut(suntan[,1], sun.breaks, right=F)
suntan.cut
table(suntan.cut)
barplot(table(suntan.cut))
hist(suntan[,1])
hist(suntan[,1], breaks = min(suntan):max(suntan))
par(c(1,2))
hist(suntan[,1], breaks = min(suntan):max(suntan))
barplot(table(suntan.cut))
sun.breaks = seq(range(suntan)[1], range(suntan)[2]+1, by=1)
suntan.cut = cut(suntan[,1], sun.breaks, right=F)
suntan.cut
# par(c(1,2))
hist(suntan[,1], breaks = min(suntan):max(suntan))
barplot(table(suntan.cut))
# par(c(1,2))
hist(suntan[,1], breaks = sun.breaks)
sun.breaks = seq(range(suntan)[1], range(suntan)[2]+1, by=2)
suntan.cut = cut(suntan[,1], sun.breaks, right=F)
suntan.cut
barplot(table(suntan.cut))
hist(suntan[,1], breaks = sun.breaks)
sun.breaks = seq(range(suntan)[1], range(suntan)[2]+1, by=4)
suntan.cut = cut(suntan[,1], sun.breaks, right=F)
suntan.cut
barplot(table(suntan.cut))
hist(suntan[,1], breaks = sun.breaks)
sun.breaks = seq(range(suntan)[1], range(suntan)[2]+1, by=1)
suntan.cut = cut(suntan[,1], sun.breaks, right=T)
suntan.cut
barplot(table(suntan.cut))
sun.breaks = seq(range(suntan)[1]-1, range(suntan)[2]+1, by=1)
suntan.cut = cut(suntan[,1], sun.breaks, right=T)
suntan.cut
barplot(table(suntan.cut))
sun.breaks = seq(range(suntan)[1]-1, range(suntan)[2]+1, by=1)
suntan.cut = cut(suntan[,1], sun.breaks, right=T)
suntan.cut
barplot(table(suntan.cut))
hist(suntan[,1], breaks = sun.breaks)
sun.breaks = seq(range(suntan)[1]-1, range(suntan)[2]+1, by=18)
suntan.cut = cut(suntan[,1], sun.breaks, right=T)
suntan.cut
barplot(table(suntan.cut))
sun.breaks = seq(range(suntan)[1]-1, range(suntan)[2]+1, by=8)
suntan.cut = cut(suntan[,1], sun.breaks, right=T)
suntan.cut
barplot(table(suntan.cut))
sun.breaks = seq(range(suntan)[1]-1, range(suntan)[2]+1, by=2)
suntan.cut = cut(suntan[,1], sun.breaks, right=T)
suntan.cut
barplot(table(suntan.cut))
suntan.mean = mean(suntan)
suntan.mean = mean(suntan[,1])
suntan.var = var(suntan[,1])
suntan.std = sd(suntan[,1])
suntan.min = min(suntan[,1])
suntan.max = max(suntan[,1])
suntan.median = median(suntan[,1])
suntan.mad = mad(suntan[,1])
suntan.mode = as.numeric(names(suntan.table[which.max(unname(suntan.table))]))
suntan.table = table(suntan)
suntan.mode = as.numeric(names(suntan.table[which.max(unname(suntan.table))]))
suntan.skew = 1/length(suntan[,1]) * sum((suntan[,1] - suntan.mean)^3) / suntan.std^3
suntan.kur = 1/length(suntan[,1]) * sum((suntan[,1] - suntan.mean)^4) / suntan.std^4
suntan.kur = 1/length(suntan[,1]) * sum((suntan[,1] - suntan.mean)^4) / suntan.std^4 - 3
suntan.kur = 1/length(suntan[,1]) * sum((suntan[,1] - suntan.mean)^4) / suntan.std^4
boxplot(suntan)
