setwd("//home.org.aalto.fi/savelaj3/data/Documents/R/Intr_to_stat_infer") #koulun kone
q <- read.csv("E4QUEUE.txt")
q
#### 2 ####
q <- read.csv("E4QUEUE.txt", sep = "\")
q
#### 3 ####
q <- read.csv("E4QUEUE.txt", sep = "\t")
q <- read.csv("E4QUEUE.txt", sep = "\t")
q
s <- read.csv("E4SALARY.txt")
s
s <- read.csv("E4SALARY.txt", sep = "\t")
s
bootstrap <- function(a) {
a.mean <- mean(a)
n <- 999
alpha <- 0.1
a.b <- a.mean
for (i in 1:n) {
b <- sample(a, replace = T)
a.b <- c(a.b, mean(b))
}
a.b.sorted <- sort(a.b)
left <- a.b.sorted[round((n+1)*alpha/2)]
right <- a.b.sorted[round((n+1)*(1-alpha/2))]
return(c(left, right))
}
a = 1:0.3:10
a
bootstrap(a)
bootstrap(a)
bootstrap(a)
bootstrap(a)
bootstrap(a)
mean(a)
library(boot)
library(BSDA)
install.packages("BSDA")
library(BSDA)
q$QUEUEA
q$QUEUEB
q <- read.csv("E4QUEUE.txt", sep = "\t", na.strings = "M")
q$QUEUEB
q
mean(q$QUEUEA)
mean(q$QUEUEB)
mean(q$QUEUEB, na.rm = T)
median(q$QUEUEA)
median(q$QUEUEB, na.rm = T)
bootstrap <- function(a) {
a.median <- median(a)
n <- 999
alpha <- 0.1
a.b <- a.median
for (i in 1:n) {
b <- sample(a, replace = T)
a.b <- c(a.b, median(b))
}
a.b.sorted <- sort(a.b)
left <- a.b.sorted[round((n+1)*alpha/2)]
right <- a.b.sorted[round((n+1)*(1-alpha/2))]
return(c(left, right))
}
bootstrap(a)
bootstrap(q$QUEUEA)
bootstrap(q$QUEUEB)
qa <- q$QUEUEA
qb <- q$QUEUEB
qb
qb <- q$QUEUEB[1:(length(q$QUEUEB)-3)]
qb
median(q$QUEUEA)
median(q$QUEUEB, na.rm = T)
bootstrap(q$QUEUEA)
bootstrap(q$QUEUEB)
median(qa)
median(qb, na.rm = T)
bootstrap(qa)
bootstrap(qb)
boota <- boot(qa, sample.median, R=1000, stype = "i")
sample.median <- function(x, d) return(median(x[d]))
boota <- boot(qa, sample.median, R=1000, stype = "i")
boot.ci(boota, conf = 0.9)
bootb <- boot(qb, sample.median, R=1000, stype = "i")
boot.ci(bootb, conf = 0.9)
qb <- na.omit(q$QUEUEB)
qb
qb[1]
bootb <- boot(qb, sample.median, R=1000, stype = "i")
boot.ci(bootb, conf = 0.9)
bootstrap(qa)
bootstrap(qb)
bootamad <- boot(qa, sample.mad, R=1000, stype = "i")
sample.mad <- function(x, d) return(mad(x[d]))
bootamad <- boot(qa, sample.mad, R=1000, stype = "i")
boot.ci(bootamad, conf = 0.9)
mad(qa)
sd(qa)
mad(qb)
bootbmad <- boot(qb, sample.mad, R=1000, stype = "i")
boot.ci(bootbmad, conf = 0.9)
range(qa)
range(qb)
par(mfrow=c(1,2))
hist(qa)
hist(qb)
help("hist")
par(mfrow=c(1,2))
hist(qa, xlim = c(min(qa), max(qb)))
hist(qb, xlim = c(min(qa), max(qb)))
par(mfrow=c(1,2))
hist(qa, xlim = c(min(qa)-1, max(qb)+1))
hist(qb, xlim = c(min(qa)-1, max(qb)+1))
par(mfrow=c(1,2))
hist(qa, xlim = c(5, 12))
hist(qb, xlim = c(5, 12))
par(mfrow=c(1,2))
hist(qa, main = "A", xlim = c(5, 12))
hist(qb, main = "B", xlim = c(5, 12))
par(mfrow=c(1,1))
help("wilcox.test")
wilcox.test(qa, qb, alternative = "t")
sm <- s$MALE
sw <- s$FEMALE
median(sm)
median(sw)
mad(sm)
mad(sw)
t.test(qa, qb, alternative = "t")
SIGN.test(qa, qb, alternative = "t")
range(sm)
range(sw)
plot(sm, sw)
help("lines")
x <- c(41300, 49300)
plot(sm, sw)
lines(x, x)
s
sm
sw
plot(sm, sw, xlab = "Salary, men", ylab = "Salary, women")
lines(x, x)
?abline
plot(sw, sm, xlab = "Salary, women", ylab = "Salary, men")
abline(1, col = "red")
abline(a = 0, b = 1, col = "red")
help("SIGN.test")
SIGN.test(sw, sm)
wilcox.test(sw, sm, alternative = "t", paired = T)
t.test(sw, sm, alternative = "t", paired = T)
par(mfrow=c(1,2))
hist(sw)
hist(sm)
par(mfrow=c(1,1))
wilcox.test(sw-sm, alternative = "t")
